#Question 1
#a
new.data <- data.frame(
  new_id = c (1:5), 
  new_name = c("Peter","Amy","Ryan","Gary","Michelle"),
  salary = c(623.30,515.20,611.00,729.00,843.25) )
print (new.data)
  new_id new_name salary
1      1    Peter 623.30
2      2      Amy 515.20
3      3     Ryan 611.00
4      4     Gary 729.00
5      5 Michelle 843.25
#b
new.data$department <- c("Science","Math","Accounting","Econ","Finance")
print (new.data)
new_id new_name salary department
1      1    Peter 623.30    Science
2      2      Amy 515.20       Math
3      3     Ryan 611.00 Accounting
4      4     Gary 729.00       Econ
5      5 Michelle 843.25    Finance
#c
result <- new.data[c(1,3,5),c(2,3)]
print(result)
  new_name salary
1    Peter 623.30
3     Ryan 611.00
5 Michelle 843.25
#d
x <- c("Peter","Gary","Michelle")
y <- c(623.30,729.00,843.25)
barplot(y, names.arg = x)
#e
z <- c(515.50,623.30,843.25)
mylabel <- c("min" , "median", "max")
pie(z, label=mylabel, main = "Salaries")
#Question 2
library(TurtleGraphics)

turtle_init()

drawRectangle <- function(x, y, height, width, color) {
  turtle_setpos(x, y)
  turtle_col(color)
  
  for (i in 1:4) {
    if (i %% 2 == 0) {
      turtle_forward(width)
    } else {
      turtle_forward(height)
    }
    turtle_right(90)
  }
}

getColor <- function(color) {
  if (color == "red") {
    return("#FF0000")
  } else if (color == "blue") 
    return("#0000FF")
  } else {
    return("#FFFFFF")
  }


drawRectangle(10, 10, 10, 30, "blue")

#python code
def draw_rectangle(x, y, height, width, color):
        america.goto(x,y)
        america.pendown()
        america.color(color)
        america.begin_fill()
        america.forward(width)
        america.right(90)
        america.forward(height)
        america.right(90)
        america.forward(width)
        america.right(90)
        america.forward(height)
        america.right(90)
        america.end_fill()
        america.penup()

  def get_color(color):
        if color== ("red"):
            return (255,0,0)
        if color == ("blue"):
            return (0,0,255)
        if color == ("white"):
            return (255,255,255)
        else:
            return (0,0,0)
